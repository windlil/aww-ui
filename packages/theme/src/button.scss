@use './common/var.scss' as *;
@use './mixins/mixin.scss' as *;
@use './mixins/utils.scss' as *;
@use './mixins/_button' as *;
@use './common/animation.scss' as *;

@include b(button) {
  position: relative;
  box-sizing: border-box;
  display: inline-block;
  margin: 0;
  outline: none;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  border: 1px solid $button-default-backgroundColor;
  background-color: $button-default-backgroundColor;
  color: $color-white;
  transition: 0.2s;

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    display: block;
    pointer-events: none;
    border-radius: inherit;
    animation-duration: 700ms;
    animation-iteration-count: 1;
  }

  &:hover, &:focus, &:active {
    background-color: mix($color-white, $button-default-backgroundColor, $button-hover-percent); 
  }

  &.a-button--simple {
    color: $border-color-base;
    &:hover, &:active, &:focus {
      background-color: $color-default-opacity-hover; 
    }
  }

  @include when(text) {
    color: $font-gray-1;
    background-color: transparent;
    border: 0;
  }

  @include when(disabled) {
    &, &:hover, &:focus {
      cursor: not-allowed;
      background-color: mix($button-default-backgroundColor, $color-white);
    }
  }

  @include utils-user-select(none);

  @include button-size($button-padding-vertical, $button-padding-horizontal, $button-font-size, $button-border-radius);


  @include m(primary) {
    @include simple($button-simple-primary-backgroundColor, $color-primary-opacity-hover, $button-primary-backgroundColor);
    @include button-main($button-primary-backgroundColor, $color-primary, $color-white, primary);
  }

  @include m(success) {
    @include simple($button-simple-success-backgroundColor, $color-success-opacity-hover, $button-success-backgroundColor);
    @include button-main($button-success-backgroundColor, $color-success, $color-white, success);
  }

  @include m(warning) {
    @include simple($button-simple-warning-backgroundColor, $color-warning-opacity-hover, $button-warning-backgroundColor);
    @include button-main($button-warning-backgroundColor, $color-warning, $color-white, warning);
  }

  @include m(danger) {
    @include simple($button-simple-danger-backgroundColor, $color-danger-opacity-hover, $button-danger-backgroundColor);
    @include button-main($button-danger-backgroundColor, $color-danger, $color-white, danger);
  }

  @include m(large) {
    @include button-size($button-large-padding-vertical, $button-large-padding-horizontal, $font-size-large, $button-border-radius)
  }

  @include m(small) {
    @include button-size($button-small-padding-vertical, $button-small-padding-horizontal, $font-size-small, $button-border-radius)
  }

  @include when(round) {
    border-radius: $button-round-radius;
  }

  @include m(ripple) {
    @include ripple($button-default-backgroundColor, default)
  }

  @include m(simple) {
    background-color: $button-simple-default-backgroundColor;
    color: $font-gray;
  }
}

[data-theme='dark'] {
  @include b(button) {
    color: $color-white;
  }
}

.a-button--primary.a-button--ripple {
  @include ripple($button-primary-backgroundColor, primary)
}

.a-button--success.a-button--ripple {
  @include ripple($button-success-backgroundColor, success)
}

.a-button--warning.a-button--ripple {
  @include ripple($button-warning-backgroundColor, warning)
}

.a-button--danger.a-button--ripple {
  @include ripple($button-danger-backgroundColor, danger)
}




