@use '../common/var.scss' as *;
@use './mixin.scss' as *;

@mixin button-main($background-color, $border-color, $color, $type) {
  background-color: $background-color;
  color: $color;
  border-color: $border-color;

  &:hover, &:focus, &:active {
    color: $color;
    border-color: mix($color-white, $border-color, $button-hover-percent);
    background-color: mix($color-white, $background-color, $button-hover-percent);
  }
  
  &.is-disabled {
    &, &:hover, &:focus, &:active {
      color: $color-white !important;
      background-color: mix($background-color, $color-gray) !important;
      border-color: mix($border-color, $color-gray) !important;
    }
  }

  @include when(text) {
    background-color: transparent;
    color: $background-color !important;
  }
}

@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;

  &.is-round {
    border-radius: $border-radius;
  }
}

@mixin ripple($background-color, $type) {
    &::after {
    animation-name: #{$type}-button-pulse, #{$type}-button-pulse-disappear;
    @keyframes #{$type}-button-pulse {
      0% {
        box-shadow: 0 0 1px $background-color;
      }
    
      100% {
        box-shadow: 0 0 1px 10px $background-color;
      }
    }
    
    @keyframes #{$type}-button-pulse-disappear {
      0% {
        opacity: 65%;
      }
    
      100% {
        opacity: 0%;
      }
    }
  }
}

@mixin simple($background-color, $background-color-hover, $font-color) {
  &.a-button--simple {
    background-color: $background-color !important;
    color: $font-color !important;
    &:hover, &:active, &:focus {
      background-color: $background-color-hover !important;
    }
  }
}